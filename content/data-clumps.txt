Data clumps are groups of data items that are related and are always used or passed around together. They are often primitive values. An example of this is a "start" variable and an "end" variable.
Martin Fowler suggests replacing these clumps with a single object. In the example above the start and end could be replaced by a "Range" class. Doing this refactoring decreases the size of parameter lists when the values are passed around. This is one solution to the Long parameter list smell. You can also discover some nice behaviour when you extract the data into an object. For the Range example, you often want to know if a value is within the start and end range, so you could define an "includes" method in the Range class to check for this easily.